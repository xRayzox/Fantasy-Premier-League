services:
  ######################################################
# DATABASE SERVICE
######################################################
  postgres:
    image: postgres:13
    restart: always
    container_name: postgres
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "airflow_db", "-U", "airflow"]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - bigdata-network
######################################################
# AIRFLOW
######################################################

  airflow:
    build: ./docker/airflow
    restart: always
    container_name: airflow
    volumes:
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/spark
      - ./mnt/airflow/plugins:/opt/airflow/plugins
      - ./FPL:/opt/airflow/fpl_functions
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - bigdata-network


  ######################################################
  # SPARK
  ######################################################
  spark-master:
    image: bitnami/spark:latest
    ports:
      - "8081:8080"  # Spark Master UI
      - "7077:7077"  # Spark Master port
    environment:
      SPARK_MODE: master
      SPARK_RPC_AUTHENTICATION_ENABLED: "no"
      SPARK_RPC_ENCRYPTION_ENABLED: "no"
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
      SPARK_SSL_ENABLED: "no"
    networks:
      - bigdata-network

  spark-worker:
    image: bitnami/spark:latest
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 2g  # Adjust if needed
    networks:
      - bigdata-network

  ######################################################
  # MinIO
  ######################################################
  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # MinIO server
      - "9001:9001"  # MinIO console
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: FPL_DWH
      MINIO_ROOT_PASSWORD: FPL_DWH_data
    command: server --console-address ":9001" /data
    networks:
      - bigdata-network

######################################################
# Metabase
######################################################
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabaseappdb
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: mysecretpassword
      MB_DB_HOST: postgres
    networks:
      - metanet1
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
######################################################
# NETWORK
######################################################
networks:
  bigdata-network:
    driver: bridge

volumes:
  minio_storage: {}
  pgadmin-data:
